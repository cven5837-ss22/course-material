---
title: "Live Coding - Data Science Lifecycle"
format:
  pdf: default
  docx: default
  html:
    toc: true
editor: visual
bibliography: references.bib
execute:
  echo: true
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

# Data import

Data can be imported from many different sources. In this exercise, we import data from:

1.  an R Package that is loaded via the `library()` function.

## Gapminder data

The data is an [excerpt of the Gapminder data](https://www.gapminder.org/data/documentation/) on life expectancy, GDP per capita, and population by country. Compiled for the purpose of teaching with data until 2007. It is not a definitive source of socioeconomic data and it is not updated [@bryan2017].

```{r}

# load library, explain error and install in Console

library(gapminder)

gapminder
str(gapminder)
?gapminder

```

# Data tidying

Once you imported the data, the next step in any data science lifecycle is the tidying of data. It's about bringing your data into a consistent structure that let's you focus on the analysis. Depending on how messy the data structure is, this can be tedious task and take up a great part of the data scienbce lifecycle process.

## Gapminder data

```{r}

# Take a look at the data

gapminder 

```

# Data transformation

Once your data is tidy, a common first step is to transform it. This includes:

1.  narrowing in on what interests you (e.g. all people without toilets in one district, or all data from last year)

2.  creating new variables from existing (like toilet density, as in number of people per toilet)

3.  calculating summary statistics (like counts or the mean)

## Gapminder data

**Goal:** Calculate the median life expectancy at birth by continent for 2007.

```{r}

# before loading library, write code 

library(dplyr)
  

# Step 1: 
# Filter data for the year 2007. 
# Store as new object: gapminder_yr_2007

gapminder_yr_2007 <- gapminder %>% 
  filter(year == 2007)

# Step 2: 
# Group data by continent and calculate mean life expectancy
# Store as new object: gapminder_summary_continent

gapminder_summary_continent <- gapminder_yr_2007 %>% 
  group_by(continent) %>% 
  summarise(lifeExp = median(lifeExp))

```

# Data visualisation (and tables)

## Gapminder data

Africa has the lowst life expectancy and greatest spread in life expectancy globally (compare @tbl-median-continent and @fig-boxplot-continent).

```{r}
#| label: tbl-median-continent
#| tbl-cap: "Median life expectancy by continent in 2007."

# Step 1: Write summary table with kable function

gapminder_summary_continent %>% 
  kable(digits = 1)

```

**Goal:** Use a boxplot to visualize the median life expectancy by continent in 2007. In the same plot, use a jitter plot to visualise the spread of life expectancy for all countries.

```{r}
#| label: fig-boxplot-continent
#| fig-cap: "Median life expectancy by continent in 2007. Each dot represents one individual country."

# Step 1: Load ggplot2 package

library(ggplot2)

# Step 2: Write ggplot main function with data and mapping.

# Step 3: Add boxplot and show how to google for removing outliers

# Step 4: Add jitterplot with 0.1 width, 1/4 alpha, 3 size

# Step 5: Add labels

# Step 6: Add a theme minimal with base_size 14

ggplot(data = gapminder_yr_2007, 
       mapping = aes(x = continent, 
                     y = lifeExp)) +
  geom_boxplot(outlier.shape = NA) + # google this
  geom_jitter(width = 0.1, alpha = 1/4, size = 3) +
  labs(x = NULL,
       y = "life expectancy") +
  theme_minimal(base_size = 14) 

```

# Data communication

Your rendered html file is a great data communication product. You will learn a bit later in the course how you could make it accessible to others as a website, but you could also just share the HTML file with a collaborator or render the document to the 'pdf' or 'docx' formats.

**Finale:** Render, Add, Commit, and Push changes back to GitHub.

# References
