---
title: "Untitled"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Project report

Thank you for uploading your identified data to the course material. I have created this file for you to work on your data using the code you have learned as part of the course. I have added some data cleaning steps as the first code-chunk. I hope this will help you work with your data more efficiently.

It is up to you which analysis you would like to perform with your data. I am available to support you and answer any questions you may have.

```{r}
# here I load all R packages that are part of the tidyverse collection of R packages
# you can use this instead of loading each package individually

library(tidyverse)


```

# Data import

```{r}

literacy <- read_csv("data/MJT_WB1_Education_Data.csv")

```

# Data cleaning

You see a bit data tidying and restructuring here. You have already learned all functions besides the `pivot_longer()` function, which gets the data from a wide format into a long format. Execute the code step by step by highlighting parts of it to understand what I have done here.

```{r}

literacy_tidy <- literacy |> 
  rename(country = `Country Name`, 
         iso3 = `Country Code`,
         series = Series,
         series_code = `Series Code`) |> 
  pivot_longer(cols = !country:series_code, 
               names_to = "year", 
               values_to = "prop") |> 
  mutate(year = str_sub(year, start = 1L, end = 4L)) |> 
  mutate(prop = case_when(
    prop == ".." ~ NA_character_,
    TRUE ~ prop
  )) |> 
  filter(!is.na(prop)) |> 
  mutate(prop = as.numeric(prop)) |> 
  mutate(percent = case_when(
    str_detect(series, "(%)") ~ prop, 
    TRUE ~ prop * 100))
```

# Data transformation

The following code creates a frequency table for all series codes, which helps to see for which of them you have the most data available. I then use the identified series code in the filter function to visualise data for that specific code further below.

```{r}
literacy_tidy |> 
  count(series_code, series) |> 
  arrange(desc(n))
```

# Data visualisation

```{r}

literacy_tidy |> 
  filter(series_code == "UIS.LR.AG15T99.GPIA") |> 
  # it is possible to use the pipe to use the data directly in 
  # the ggplot() function for plotting
  ggplot(mapping = aes(x = year, 
                       y = percent, 
                       group = iso3, 
                       color = country)) +
  geom_point() +
  geom_line()


```

```{r}

literacy_tidy |> 
  filter(series_code == "SE.ADT.1524.LT.FE.ZS") |> 
  ggplot(aes(x = year, 
             y = percent, 
             color = country, 
             group = country)) +
  geom_point() +
  geom_line()


```
